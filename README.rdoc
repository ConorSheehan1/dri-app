== WARNING and DISCLAIMER

This code in its current state is not to be redistributed to parties
outside of DRI.

THIS IS FOR ADMINS ONLY, THERE IS A SEPARATE HEAD FOR NON-ADMIN USERS

== Welcome to nuig-rnag

This repository contains the proto-type of a Hydra-Head which targets the
NUIG-RNAG dataset. This dataset contains primarily Audio and PDF files.

This is a ruby on rails application, as such to run this application
the user must be somewhat aware of how ruby on rails applications are
run and deployed.

For testing and development you will need to bootstrap the project

  $ git clone ssh://git@lonsdale.tchpc.tcd.ie/navr/nuig-rnag
  $ cd nuig-rnag
  $ git submodule update --init --recursive
  $ bundle
  $ bundle exec rake db:migrate
  $ bundle exec rake db:seed

  Dont forget to prepare the test database with
    $ bundle exec rake db:test:prepare

To start the application for demo purposes

  $ cd nuig-rnag
  $ rake jetty:start
  $ bundle exec rails server

To run the unit tests

  $ cd nuig-rnag
  $ rake jetty:start
  $ rake spec

To run the functional tests

  $ cd nuig-rnag
  $ rake jetty:start
  $ rake cucumber or bundle exec cucumber

Additional information can be found by reading up on the drirepo,
nuig-rnag, rspec, cucumber and rails documentation.

== Testing

The unit tests are written using rspec and the functional tests are
written with cucumber.

This project is setup to use guard to automatically run tests as they
are changed.

  $ cd nuig-rnag
  $ bundle exec guard

The poltergeist gem is required for testing, as a result phantomjs binary
to run poltergeist.

* https://github.com/jonleighton/poltergeist
* https://github.com/ariya/phantomjs

== Translations

When translations are added to the english locale files in config/locales
you should run the rake task localefiles with the parameter file which should
be set to the path to the ENGLISH yml file. For example:

  $ rake locales:mergefile file=config/locales/dri/en.yml

This will merge any new keys from the English file into any other locale files
(with the same naming convention) in that directory. The default value for each
key will be the English text.

To merge all files use

  $ rake locales:mergeall

== Settings.yml

This is where the application specific settings are located

  config/settings.yml

Please view and edit this file as needed before deploying the application.

== Background jobs

The application includes a queueing system based on Resque and Redis to allow
asynchronous processing of background jobs. This introduces the following dependencies:

  * Redis (server for the queueing system)
  * ffmpeg (video file processing tool)

The file processing tools should be installed locally with the hydra-head.

For testing purposes Redis can be installed locally and started with the command

  $ sudo redis-server /opt/local/etc/redis.conf

To start the worker to process jobs run

  $ bundle exec rake resque:work QUEUE="*"

To view your queues (for debugging purposes) run 

  $ resque-web -x

This should pop up a browser window looking at localhost:5678 (if not open one). Here
you can the status of your queues and jobs.

The worker code is currently in lib/workers/.

== Going into production

Edit config/solr.yml config/fedora.yml config/database.yml and put in
the correct production servers into place.

Some steps required to be run before a production env is ready to go...

  $ rake RAILS_ENV=production assets:precompile
  $ rake RAILS_ENV=production db:schema:load
  $ rake RAILS_ENV=production db:migrate

The above assumes a production ready instance of mysql, solr,
fedora-commons and mod_passenger.
