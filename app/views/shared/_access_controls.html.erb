<% disabled_inherit = (record.is_collection?) ? true : false  %>
<% allow_manage = (record.is_collection? && record.new_record?) ? true : false %>

<script type="text/javascript">
    function ImprovedTextBox(textbox_str){
        this.textbox = $(textbox_str);
        this.last_tb_value;
        this.catch_tb_value();
    }

    ImprovedTextBox.prototype.catch_tb_value = function(){
        this.last_tb_value = this.textbox.val();
    };

    ImprovedTextBox.prototype.hide = function(){
        this.textbox.hide();
    };

    ImprovedTextBox.prototype.show = function(){
        this.textbox.show();
    };

    ImprovedTextBox.prototype.value = function(){
        return this.textbox.val();
    };

    ImprovedTextBox.prototype.val = function(text){
        this.textbox.val(text);
    };

    ImprovedTextBox.prototype.restore_previous_value = function(){
        this.textbox.val(this.last_tb_value);
    };

    ImprovedTextBox.prototype.add_user_string = function(text){
        //comma followed by spaces, then text then spaces and final comma
        var regex_contains = new RegExp(",\\s*" + text + "\\s*,");
        var regex_start = new RegExp("^\\s*" + text + "\\s*,?\\s*");

        if(!this.textbox.val().match(regex_contains) && !this.textbox.val().match(regex_start)){
            this.textbox.val(text+", "+this.textbox.val());
        }
    };

    var public_str = "public";
    var registered_str = "registered";
    var empty_str = "";

    var model_str;
    var read_user_textbox;
    var read_group_textbox;

    var edit_user_textbox;
    var edit_group_textbox;

    var manager_user_textbox;
    var manager_group_textbox;

    var embargo_textbox;

    $(document).ready(function () {

        model_str = "batch";

        discover_user_textbox = new ImprovedTextBox('#batch_discover_users_string');
        discover_group_textbox = new ImprovedTextBox('#batch_discover_groups_string');
        init_search_access();

        read_user_textbox = new ImprovedTextBox('#batch_read_users_string');
        read_group_textbox = new ImprovedTextBox('#batch_read_groups_string');
        init_read_access();

        edit_user_textbox = new ImprovedTextBox('#batch_edit_users_string');
        edit_group_textbox = new ImprovedTextBox('#batch_edit_groups_string');
        init_edit_access();

        manager_user_textbox = new ImprovedTextBox('#batch_manager_users_string');
        manager_group_textbox = new ImprovedTextBox('#batch_manager_groups_string');
        init_manager_access();

        embargo_textbox = new ImprovedTextBox('#batch_embargo');
        init_embargo();
    });

    function init_search_access(){
        //search_field_toggle();
    }

    function init_read_access(){
        var original_value_user = read_user_textbox.value();
        var original_value_group = read_group_textbox.value();

        read_toggle_show_textboxes(false);
        if(original_value_user!=empty_str){
            //Know its restricted without checking for public/registered
            $('#'+model_str+'_read_groups_string_radio_restricted').prop('checked', true);
            read_toggle_show_textboxes(true);
        }else{
            if(original_value_group==empty_str){
                $('#'+model_str+'_read_groups_string_radio_inherit').prop('checked', true);
            }else if(original_value_group==public_str){
                $('#'+model_str+'_read_groups_string_radio_public').prop('checked', true);
            }else if(original_value_group==registered_str){
                $('#'+model_str+'_read_groups_string_radio_logged').prop('checked', true);
            }else{
                $('#'+model_str+'_read_groups_string_radio_restricted').prop('checked', true);
                read_toggle_show_textboxes(true);
            }
        }
    }

    function init_edit_access(){
        var original_value_user = edit_user_textbox.value();
        var original_value_group = edit_group_textbox.value();

        if(original_value_user!=empty_str){
            $('#'+model_str+'_edit_groups_string_radio_restricted').prop('checked', true);
            edit_toggle_show_textboxes(true);
        }else{
            edit_toggle_show_textboxes(false);
            $('#'+model_str+'_edit_groups_string_radio_inherit').prop('checked', true);
        }
    }

    function init_manager_access(){
        var original_value_user = manager_user_textbox.value();
        var original_value_group = manager_group_textbox.value();

        if (typeof(batch_manager_groups_string_radio_restricted)!='undefined'){
            if(original_value_user!=empty_str){
                $('#'+model_str+'_manager_groups_string_radio_restricted').prop('checked', true);
                manager_toggle_show_textboxes(true);
            }else{
                manager_toggle_show_textboxes(false);
                $('#'+model_str+'_manager_groups_string_radio_inherit').prop('checked', true);
            }
        }
    }

    function init_embargo(){
        var value = embargo_textbox.value();

        if(value==empty_str){
            $('#'+model_str+'_embargo_radio_inherit').prop('checked', true);
            embargo_toggle_show_textbox(false);
        }else{
            $('#'+model_str+'_embargo_radio_restricted').prop('checked', true);
            embargo_toggle_show_textbox(true);
        }
    }

    function search_field_toggle(){
        var val = $('input[name="'+model_str+'[private_metadata]"]:checked').val();
        if(val=="radio_public" || val=="radio_inherit"){
            discover_group_textbox.val("");
            discover_user_textbox.val("");
            $('#page_access_entries').hide();
        }else if(val=="radio_private"){
            var text= "<%= t('dri.views.objects.access_controls.private_metadata_warn') %>"
            alert(text);
            $('#page_access_entries').show();
        }else{
            console.log("Unknown textbox selected: search_field_toggle")
        }
    }

    function read_field_toggle(){
        var val = $('input[name="'+model_str+'[read_groups_string]"]:checked').val();
        if(val=="radio_inherit"){
            read_group_textbox.val("");
            read_user_textbox.val("");
            read_toggle_show_textboxes(false);
        }else if(val=="radio_logged"){
            read_group_textbox.val(registered_str);
            read_user_textbox.val("");
            read_toggle_show_textboxes(false);
        }else if(val=="radio_public"){
            read_group_textbox.val(public_str);
            read_user_textbox.val("");
            read_toggle_show_textboxes(false);
        }else if(val=="radio_restricted"){
            read_toggle_show_textboxes(true);
            if(read_group_textbox.val()==registered_str || read_group_textbox.val()==public_str){
                read_group_textbox.val("");
            }
            $('#'+model_str+'_read_groups').show();
        }else{
            console.log("Unknown textbox selected: read_field -"+val);
        }
    }

    function edit_field_toggle(){
        var val = $('input[name="'+model_str+'[edit_groups_string]"]:checked').val();
        if(val=="radio_inherit"){
            edit_group_textbox.val("");
            edit_user_textbox.val("");
            edit_toggle_show_textboxes(false);
        }else if(val=="radio_restricted"){
            edit_group_textbox.val("");
            edit_user_textbox.val("");
            edit_toggle_show_textboxes(true);
        }else{
            console.log("Unknown textbox selected: edit_field -"+val);
        }
    }

    function manager_field_toggle(){
        var val = $('input[name="'+model_str+'[manager_groups_string]"]:checked').val();
        if(val=="radio_inherit"){
            manager_group_textbox.val("");
            manager_user_textbox.val("");
            manager_toggle_show_textboxes(false);
        }else if(val=="radio_restricted"){
            manager_group_textbox.val("");
            manager_user_textbox.val("");
            manager_toggle_show_textboxes(true);
        }else{
            console.log("Unknown textbox selected: manager_field -"+val);
        }
    }

    function embargo_field_toggle(){
        var val = $('input[name="'+model_str+'[embargo]"]:checked').val();

        if(val=="radio_inherit"){
            embargo_textbox.val("");
            embargo_toggle_show_textbox(false);
        }else if(val=="radio_restricted"){
            embargo_toggle_show_textbox(true);
        }else{
            console.log("Unknown textbox selected: embargo_field -"+val);
        }
    }

    function read_toggle_show_textboxes(show){
        if(show){
            read_group_textbox.restore_previous_value();
            read_user_textbox.restore_previous_value();
            $('#read_access_entries').show();
        }else{
            $('#read_access_entries').hide();
        }
    }

    function edit_toggle_show_textboxes(show){
        if(show){
            edit_group_textbox.restore_previous_value();
            edit_user_textbox.restore_previous_value();
            edit_user_textbox.add_user_string('<%= current_user.user_key %>');
            $('#edit_access_entries').show();
        }else{
            $('#edit_access_entries').hide();
        }
    }

    function manager_toggle_show_textboxes(show){
        if(show){
            manager_group_textbox.restore_previous_value();
            manager_user_textbox.restore_previous_value();
            manager_user_textbox.add_user_string('<%= current_user.user_key %>');
            $('#manager_access_entries').show();
        }else{
            $('#manager_access_entries').hide();
        }
    }

    function embargo_toggle_show_textbox(show){
        if(show){
            embargo_textbox.restore_previous_value();
            $('#embargo_access_entries').show();
        }else{
            $('#embargo_access_entries').hide();
        }
    }
</script>

<legend><%= t('dri.views.objects.legends.access_control') %></legend>
<h5><%= t('dri.views.objects.access_controls.depositor') %></h5>
<%= record.depositor %>


<div class="field">
  <h5><%= t('dri.views.objects.access_controls.read') %></h5>
  <div class="controls">
    <%= f.radio_button :read_groups_string, "radio_inherit", :onclick => "read_field_toggle();", :disabled=> disabled_inherit %>
    <%= f.label :read_groups_inherit, t('dri.views.objects.access_controls.inherit'), :class => "label inline" %>
    <%= f.radio_button :read_groups_string, "radio_public", :onclick => "read_field_toggle();" %>
    <%= f.label :read_groups_public, t('dri.views.objects.access_controls.public'), :class=> "label label-success inline" %>
    <%= f.radio_button :read_groups_string, "radio_logged", :onclick => "read_field_toggle();" %>
    <%= f.label :read_groups_registered, t('dri.views.objects.access_controls.registered'), :class => "label label-info inline"  %>
    <%= f.radio_button :read_groups_string, "radio_restricted", :onclick => "read_field_toggle();", :disabled=> true %>
    <%= f.label :read_groups_restricted, t('dri.views.objects.access_controls.restricted'), :class => "label label-important inline" %>
  </div>
  <div id="read_access_entries">
    <br />
    <%= f.label :read_users, t('user_groups.views.shared.users'), :class => "label access_control_label" %>
    <%= f.text_field :read_users_string, :onkeyup=>"read_user_textbox.catch_tb_value();" %>
    <br />
    <%= f.label :read_groups, t('user_groups.views.shared.groups'), :class => "label access_control_label" %>
    <%= f.text_field :read_groups_string, :onkeyup=>"read_group_textbox.catch_tb_value();" %>
  </div>
</div>

<br />

<div class="field">
  <%= t('dri.views.objects.access_controls.master_file') %> - <small><%= t('dri.views.objects.access_controls.master_file_desc') %></small>
  <br />
  <div class="controls">
    <%= f.radio_button :master_file, "radio_inherit", :checked=>record.master_file.nil?, :disabled=> disabled_inherit %>
    <%= f.label :master_file, t('dri.views.objects.access_controls.inherit'), :class => "label inline" %>
    <%= f.radio_button :master_file, "radio_public", :checked=>record.master_file==true %>
    <%= f.label :master_file, t('dri.views.objects.access_controls.accessible_master_file'), :class => "label label-success inline" %>
    <%= f.radio_button :master_file, "radio_private", :checked=>record.master_file==false %>
    <%= f.label :master_file, t('dri.views.objects.access_controls.private_master_file'), :class => "label label-important inline" %>
  </div>
</div>

<div class="field">
  <h5><%= t('dri.views.objects.access_controls.edit') %></h5>
  <div class="control">
    <%= f.radio_button :edit_groups_string, "radio_inherit", :onclick => "edit_field_toggle();", :disabled=> disabled_inherit  %>
    <%= f.label :edit_users, t('dri.views.objects.access_controls.inherit'), :class => "label inline" %>
    <%= f.radio_button :edit_groups_string, "radio_restricted", :onclick => "edit_field_toggle();" %>
    <%= f.label :edit_users, t('dri.views.objects.access_controls.restricted'), :class => "label label-important inline" %>

    <div id="edit_access_entries">
      <br />
      <%= f.label :edit_users, t('user_groups.views.shared.users'), :class => "label access_control_label" %>
      <%= f.text_field :edit_users_string, :onkeyup=>"edit_user_textbox.catch_tb_value();" %>
    </div>
  </div>
</div>

<% if record.is_collection? && (allow_manage || (can? :manage_collection, record)) %>
    <div class="field">
      <h5><%= t('dri.views.objects.access_controls.manage') %></h5>
      <div class="control">
        <%= f.radio_button :manager_groups_string, "radio_inherit", :onclick => "manager_field_toggle();", :disabled=> disabled_inherit  %>
        <%= f.label :manager_users, t('dri.views.objects.access_controls.inherit'), :class => "label inline" %>
        <%= f.radio_button :manager_groups_string, "radio_restricted", :onclick => "manager_field_toggle();" %>
        <%= f.label :manager_users, t('dri.views.objects.access_controls.restricted'), :class => "label label-important inline" %>

        <div id="manager_access_entries">
          <br />
          <%= f.label :manager_users, t('user_groups.views.shared.users'), :class => "label access_control_label" %>
          <%= f.text_field :manager_users_string, :onkeyup=>"manager_user_textbox.catch_tb_value();" %>
        </div>
      </div>
    </div>
<% end %>

<br />
