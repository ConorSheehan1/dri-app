#!/bin/bash

if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
  # First try to load from a user install
  source "$HOME/.rvm/scripts/rvm"
elif [[ -s "/usr/local/rvm/scripts/rvm" ]] ; then
  # Then try to load from a root install
  source "/usr/local/rvm/scripts/rvm"
else
  printf "ERROR: An RVM installation was not found.\n"
fi

rvm use ruby-2.1.5 || exit 100
rvm use ruby-2.1.5@build --create || exit 100

branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

case $1 in
patch)
    ;;
install_deps)
    git submodule init
    git submodule update
    ;;
configure)

rvm --force gemset empty ruby-2.1.5@build || exit 100

cp config/jetty.yml.sample config/jetty.yml
cp config/fedora.yml.sample config/fedora.yml
cp config/solr.yml.sample config/solr.yml
cp config/database.yml.sample config/database.yml
cp config/redis.yml.sample config/redis.yml
#cp config/doi.yml.sample config/doi.yml

cat > config/settings.local.yml << __EOF__
interface:
  languages: [en, ga]
dri:
  files: dri_files
plugins:
  ffmpeg_path: /usr/bin/ffmpeg
S3:
  server: http://localhost:8081
  access_key_id: anykey
  secret_access_key: anykey
  bucket_prefix: buildbot
__EOF__

    bundle install --quiet
    bundle exec rake db:migrate
    bundle exec rake db:seed
    bundle exec rake db:migrate
    bundle exec rake db:test:prepare
    bundle exec rake dri:fixtures:generate
    bundle exec fakes3 -r fakes3_root -p 8081 -H localhost &>/dev/null &
    echo $! > fakes3.pid
    ;;
compile)
    ;;
check)
    bundle exec rake ci_spec || exit 100
    bundle exec rake db:migrate
    bundle exec rake db:seed
    bundle exec rake dri:fixtures:generate
    bundle exec rake db:test:prepare
    bundle exec rake ci || exit 100
    bundle exec rake rdoc
    bundle exec rake assets:precompile
    ;;
package)
    ;;
upload)

    #setup ssh agent for key forwarding to work
#    eval ssh-agent $SHELL
    eval "$(ssh-agent)"
    ssh-add ~/.ssh/id_rsa

    #Now deploy update app repo codebase
    ansible-playbook -i ../../ansible-dri-infrastructure-trusty64-master/build/inventory/hosts.buildbot ../../ansible-dri-infrastructure-trusty64-master/build/site-vagrant.yml --vault-password-file ~/.vault-pass.txt -e "deploy_branch=$(git rev-parse HEAD)" --tags=getfacts,dri_app,dri_app_worker

    ;;
compile_extra)
     #check application
    OUTPUT=`curl -s -o /dev/null -I -w "%{http_code}" http://dri-vm44.maynoothuniversity.ie/is_it_working`

    if [[ $OUTPUT -ne 200 ]] ; then
      printf "Test Application Stack FAULT! [HTTP: $OUTPUT]\n"
      if [[ "$branch" == "master" ]]; then
          exit 1
      fi
    else
      printf "Test Application Stack OK. [HTTP: $OUTPUT]\n"
    fi 
    ;;
uninstall_deps)
    kill -TERM $(cat fakes3.pid)
    ;;
esac
